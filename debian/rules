#!/usr/bin/make -f
# -*- mode: makefile; coding: utf-8 -*-
# Copyright Â© 2010-2011 Jonas Smedegaard <dr@jones.dk>
# Description: Main Debian packaging script for Bitcoin
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation; either version 2, or (at
# your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

-include /usr/share/cdbs/1/rules/upstream-tarball.mk
include /usr/share/cdbs/1/class/makefile.mk
include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/rules/utils.mk

# suppress optional build-dependencies
CDBS_BUILD_DEPENDS_rules_upstream-tarball =
CDBS_BUILD_DEPENDS_rules_utils_copyright-check =

DEB_UPSTREAM_URL = http://downloads.sourceforge.net/sourceforge/bitcoin
DEB_UPSTREAM_TARBALL_BASENAME_MANGLE = s/$$/-linux/
DEB_UPSTREAM_TARBALL_SRCDIR = $(DEB_UPSTREAM_PACKAGE)-$(DEB_UPSTREAM_TARBALL_VERSION)
DEB_UPSTREAM_TARBALL_MD5 = f527a2669f4cfe82abf1fe9bea070c64

# source-less binary
DEB_UPSTREAM_REPACKAGE_EXCLUDES += ./bin/

# unneeded external project sources
DEB_UPSTREAM_REPACKAGE_EXCLUDES += ./src/cryptopp/

# Silence .ico and .mo files in addition to the default debian files
DEB_COPYRIGHT_CHECK_IGNORE_REGEX = ^src/rc/bitcoin.ico|locale/.*/LC_MESSAGES/.*.mo|debian/(changelog|copyright(|_hints|_newhints))$

DEB_BUILDDIR = src

DEB_MAKE_MAKEFILE = makefile.unix

# Avoid GUI until wxWidget 2.9 is in Debian
DEB_MAKE_BUILD_TARGET = bitcoind

# Respect DEB_BUILD_OPTIONS, and suppress arch-specific optimizations
CFLAGS_OPTIMIZEMORE = $(if $(filter noopt,$(DEB_BUILD_OPTIONS))-O0,-O3)
DEB_MAKE_EXTRA_ARGS += CFLAGS_OPTIMIZEMORE="$(CFLAGS_OPTIMIZEMORE)"

# Readd default flags (upstream bogusly use CFLAGS for C++)
CFLAGS += -D__WXGTK__ -DNOPCH -DUSE_SSL
#CFLAGS += -Wno-invalid-offsetof -Wformat

# Use optimized miner for amd64 only
CFLAGS += $(if $(filter amd64,$(DEB_HOST_ARCH)),-DFOURWAYSSE2)

CFLAGS += -D__WXDEBUG__
#wx-cxxflags := $(shell wx-config --cxxflags)
#CFLAGS += $(wx-cxxflags)

DEB_INSTALL_EXAMPLES_bitcoind += debian/examples/*
DEB_INSTALL_MANPAGES_bitcoind += debian/manpages/*

# Local databases do not seemlessly migrate across BerkeleyDB versions.
# If bumping versions, also add NEWS item, and update README.Debian.
dbver = 4.8
dbver_old = 4.7

# Apparently any recent boost is ok.  Unversioned Boost in Lenny is too
# old, however (do not include libboost-system*), so add fallback to
# ease backporting
boostver =
boostoldver = 1.35
boostdep = $(foreach dep,$1,libboost-$(dep)$(boostver)-dev (>> $(boostoldver)) | libboost-$(dep)$(boostoldver)-dev$(comma) )

CDBS_BUILD_DEPENDS += , $(call boostdep,system), libdb$(dbver)++-dev | libdb4.6++-dev, libssl-dev, libcrypto++-dev, pkg-config, libglib2.0-dev
# TODO: Drop this when maybe system json is used some day
CDBS_BUILD_DEPENDS += , $(call boostdep,filesystem program-options thread)

# FIXME: when available, enable this and install into -gui package
#CDBS_BUILD_DEPENDS += , libwxgtk2.9-dev

CDBS_SUGGESTS_bitcoind = db$(dbver)-util, db$(dbver_old)-util

pre-build::
	mkdir -p src/obj/nogui
clean::
	rm -rf src/obj
	rm -f src/bitcoind

# Ensure wrapper is set executable
binary-post-install/bitcoind::
	chmod +x $(cdbs_curdestdir)usr/bin/bitcoind
